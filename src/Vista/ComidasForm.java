/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ComidaData;
import Controlador.Conexion;
import Controlador.DietaComidaData;
import Modelo.Calorias;
import Modelo.Comida;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.Connection;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author javier
 */
public class ComidasForm extends javax.swing.JFrame {

    // Declaraciones privadas de objetos utilizados para intercambiar ----------
    // información entre formularios
    private CaloriasForm caloriasForm;
    private Calorias caloriaX;
    // -------------------------------------------------------------------------

    private ComidaData comData;
    private DietaComidaData dietaCom;
    // Creación de los bordes que utilizaremos en los TextFileds
    Border text_border = BorderFactory.createMatteBorder(0, 0, 2, 0, Color.YELLOW);
    Border text_border_disable = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE);
    Border text_border_rojo = BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(232, 65, 24));

    private boolean e = true;

    public ComidasForm() {
        initComponents();

        comData = new ComidaData();
        dietaCom = new DietaComidaData();
        // =====================================================================
        // Realizo la coneccion a la DB
        Connection con = Conexion.getConexion();

        // Si la conexion fue exitosa lo informo como conectado con un (sout)
        // para no tener ese molesto dialogo de conexion
        if (con != null) {
            this.setTitle("Sistema de Gestión NutriVida - Estado: Conectado");
            // Configuro de color verde el panel del titulo principal
            jpConexion.setBackground(new Color(0, 153, 102));
        } else {
            this.setTitle("Sistema de Gestión NutriVida - Estado: Error");
            // Configuro de color rojo el panel del titulo principal
            jpConexion.setBackground(new Color(255, 50, 0));
        }

        // Display the pacientes form in the center of the screen
        this.setLocationRelativeTo(null);

        // Set borders todos subrayados en amarillo a excepción del ID que es
        // blanco y de solo 1 pixel de grosor para indicar que no es editable
        jtfID.setBorder(text_border_disable);
        jtfNombre.setBorder(text_border);
        jtfDetalle.setBorder(text_border);
//        jtfCalorias.setBorder(text_border);

        jlEstado.setEnabled(false);
        jcbEstado.setEnabled(false);
        jcbEstado.setForeground(Color.GRAY);

        jbCalcularCalorias.setEnabled(false);

        jbBuscar.setEnabled(false);
        jbNuevo.setEnabled(false);
        jbGuardar.setEnabled(false);
        jbEliminar.setEnabled(false);
        jtfNombre.addFocusListener(fl1);
        jtfDetalle.addFocusListener(fl2);
//        jtfCalorias.addFocusListener(fl3);
//        focusListenerNombre();
//        focusListenerDetalle();
//        focusListenerCalorias();
        // Posiciono el foco en el nombre al iniciar el form
        jtfNombre.requestFocus();
    }

    public void TraerDatos() {
        if (caloriasForm != null) {
            // Instancio el objeto c de tipo Calorias
            Calorias c = caloriasForm.getCaloriaX();

            // Y le cargo los datos que estan en los textFields de la CaloriasForm
            jlCaloriasTXT.setText(c.getCalorias() + "");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jpConexion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jlMensajeSB = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jbSalir = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jlID = new javax.swing.JLabel();
        jlNombre = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JCheckBox();
        jlDetalle = new javax.swing.JLabel();
        jlCalorias = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jtfDetalle = new javax.swing.JTextField();
        jbCalcularCalorias = new javax.swing.JButton();
        jlCaloriasTXT = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(21, 65, 118));

        jPanel2.setBackground(new java.awt.Color(31, 75, 128));
        jPanel2.setPreferredSize(new java.awt.Dimension(179, 97));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestión de Comidas");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Bienvenido Nuevamente");

        jpConexion.setBackground(new java.awt.Color(21, 65, 118));
        jpConexion.setPreferredSize(new java.awt.Dimension(16, 100));

        javax.swing.GroupLayout jpConexionLayout = new javax.swing.GroupLayout(jpConexion);
        jpConexion.setLayout(jpConexionLayout);
        jpConexionLayout.setHorizontalGroup(
            jpConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jpConexionLayout.setVerticalGroup(
            jpConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo-header.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpConexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addComponent(jpConexion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel3.setBackground(new java.awt.Color(31, 75, 128));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 48));

        jlMensajeSB.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jlMensajeSB.setForeground(new java.awt.Color(255, 255, 255));
        jlMensajeSB.setText("Ingrese un nombre para buscar o complete datos para una comida nueva");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlMensajeSB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jlMensajeSB)
                .addGap(15, 15, 15))
        );

        jPanel4.setBackground(new java.awt.Color(31, 75, 128));

        jbSalir.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/5-32x32.png"))); // NOI18N
        jbSalir.setText(" Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1-32x32.png"))); // NOI18N
        jbBuscar.setText(" Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/2-32x32.png"))); // NOI18N
        jbNuevo.setText(" Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/3-32x32.png"))); // NOI18N
        jbGuardar.setText(" Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEliminar.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/4-32x32.png"))); // NOI18N
        jbEliminar.setText(" Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbLimpiar.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/6-32x32_1.png"))); // NOI18N
        jbLimpiar.setText(" Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)))
                .addGap(198, 198, 198))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbBuscar)
                .addGap(18, 18, 18)
                .addComponent(jbNuevo)
                .addGap(18, 18, 18)
                .addComponent(jbGuardar)
                .addGap(18, 18, 18)
                .addComponent(jbEliminar)
                .addGap(18, 18, 18)
                .addComponent(jbLimpiar)
                .addGap(18, 18, 18)
                .addComponent(jbSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlID.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlID.setForeground(new java.awt.Color(255, 255, 255));
        jlID.setText("ID:");

        jlNombre.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlNombre.setForeground(new java.awt.Color(255, 255, 255));
        jlNombre.setText("Nombre:");

        jcbEstado.setBackground(new java.awt.Color(21, 65, 118));
        jcbEstado.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jcbEstado.setForeground(new java.awt.Color(255, 255, 255));
        jcbEstado.setText("Activo");

        jlDetalle.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlDetalle.setForeground(new java.awt.Color(255, 255, 255));
        jlDetalle.setText("Detalle:");

        jlCalorias.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlCalorias.setForeground(new java.awt.Color(255, 255, 255));
        jlCalorias.setText("Calorias:");

        jlEstado.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlEstado.setForeground(new java.awt.Color(255, 255, 255));
        jlEstado.setText("Estado:");

        jtfID.setEditable(false);
        jtfID.setBackground(new java.awt.Color(21, 65, 118));
        jtfID.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jtfID.setForeground(new java.awt.Color(255, 255, 255));

        jtfNombre.setBackground(new java.awt.Color(21, 65, 118));
        jtfNombre.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jtfNombre.setForeground(new java.awt.Color(255, 255, 255));
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfNombreKeyReleased(evt);
            }
        });

        jtfDetalle.setBackground(new java.awt.Color(21, 65, 118));
        jtfDetalle.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jtfDetalle.setForeground(new java.awt.Color(255, 255, 255));
        jtfDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfDetalleKeyReleased(evt);
            }
        });

        jbCalcularCalorias.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jbCalcularCalorias.setText("Calcular Calorias");
        jbCalcularCalorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalcularCaloriasActionPerformed(evt);
            }
        });

        jlCaloriasTXT.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jlCaloriasTXT.setForeground(new java.awt.Color(255, 255, 255));
        jlCaloriasTXT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlCaloriasTXT.setText("0");

        jPanel5.setBackground(new java.awt.Color(31, 75, 128));

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Desde este acceso puede listar las comidas");

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("rango de calorias");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/8-32x32.png"))); // NOI18N
        jButton1.setText(" Comidas por Calorias");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlDetalle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlCalorias, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlEstado, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfDetalle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbEstado)
                                    .addComponent(jlCaloriasTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jbCalcularCalorias))))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlID))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNombre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDetalle))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlCalorias)
                            .addComponent(jbCalcularCalorias)
                            .addComponent(jlCaloriasTXT))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbEstado)
                            .addComponent(jlEstado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // Instancio el form de menu y lo hago visible mientras oculto el
        // form con comidas
        NutriVidaForm nutvidForm = new NutriVidaForm();
        nutvidForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        if (verificarNombre() == true && verificarDetalle() == true) {
            Comida comida = new Comida(jtfNombre.getText(),
                    jtfDetalle.getText(),
                    Integer.parseInt(jlCaloriasTXT.getText()),
                    true);
            if (comData.buscarComidaPorNombre(comida.getNombre()) == null) {
                comData.guardarComida(comida);
                LimpiarCampos();
                MensajeSB(1, "Comida creada");
            } else {
                MensajeSB(2, "ERROR: la comida ingresada ya existe");
            }
        }
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed

        if (verificarNombre() == true && verificarDetalle() == true) {
            Comida comida = new Comida(Integer.parseInt(jtfID.getText()), jtfNombre.getText(), jtfDetalle.getText(), Integer.parseInt(jlCaloriasTXT.getText()), jcbEstado.isSelected());
            comData.modificarComida(comida);
            LimpiarCampos();
            MensajeSB(1, "Comida guardada");
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // buscarComidaPorNombre
        try {
            // Busco comida por nombre
            Comida comida = comData.buscarComidaPorNombre(jtfNombre.getText());
            // Busco si comida no esta vacio
            if (comida != null) {
                jtfID.setText(comida.getIdComida() + "");
                jtfNombre.setText(comida.getNombre());
                jtfDetalle.setText(comida.getDetalle());
                jlCaloriasTXT.setText(comida.getCalorias() + "");
                jcbEstado.setSelected(comida.isEstado());

                // Aquí cargo calorias en el label -----------------------------
                jlCaloriasTXT.setText(comida.getCalorias() + "");
                // -------------------------------------------------------------

                if (comida.isEstado() == true) {
                    jcbEstado.setEnabled(false);
                    jbGuardar.setEnabled(true);
                    jbEliminar.setEnabled(true);
                    jbNuevo.setEnabled(false);
                    e = false;
                    habilitarCalcularCalorias();
                    // CUANDO AGREGO ESTE FOCUSLISTEENER YA NO TENGO EL PROBLEMA QUE APARECE CUANDO
// LE DOY BUSCAR Y PONGO UN NOMBRE INCORRECTO:                   
                    jtfNombre.addFocusListener(fl1);
//--------------------------------------------
                    MensajeSB(1, "Comida encontrada");
                } else {
                    MensajeSB(2, "La comida ingresada se encuentra dada de baja. Para activarla complete el campo Estado y pulse Guardar");
                    jcbEstado.setEnabled(true);
                    jlEstado.setEnabled(true);
                    jcbEstado.setForeground(Color.WHITE);
                    habilitarCalcularCalorias();

                    jtfNombre.addFocusListener(fl1);
                    jbEliminar.setEnabled(false);
                    jbGuardar.setEnabled(true);
                    jbNuevo.setEnabled(false);
                    e = false;
                }
            } else {
                if (verificarNombre() == true) {
                    MensajeSB(2, "La comida no existe en la base de datos");
                    jtfNombre.requestFocus();
                    jtfNombre.selectAll();
                }
            }
        } catch (NumberFormatException ex) {
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        try {
            Comida com = comData.buscarComidaPorNombre(jtfNombre.getText());
            if (com != null) {
                if (dietaCom.buscarDietaComidaPorId(com.getIdComida()) == null) {
                    comData.eliminarComida(com.getIdComida());
                    jcbEstado.setSelected(false);
                    LimpiarCampos();
                    MensajeSB(1, "Comida eliminada con éxito! Busque por Nombre o cargue una nueva Comida");
                } else {
                    MensajeSB(2, "Error: la Comida se encuentra vinculada en la tabla DietaComida");
                }
            } else {
                MensajeSB(2, "La Comida no existe");
            }
        } catch (NumberFormatException ex) {
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        LimpiarCampos();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbCalcularCaloriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalcularCaloriasActionPerformed
        // Aquí cargo las calorías en el Form de Gestión de Calorías
        //
        // Instancio el objeto persona de tipo Calorias y le cargo los datos
        // de los textFields de ComidasForm
        if (verificarNombre() == true && verificarDetalle() == true) {
            caloriaX = new Calorias(
                    Integer.parseInt(jlCaloriasTXT.getText())
            );
            System.out.println(caloriaX.getCalorias());
            System.out.println(jlCaloriasTXT.getText());

            // Si la CaloriasForm ya existe, la mostramos
            if (caloriasForm != null) {
                caloriasForm.setVisible(true);
            } else {
                // Si no existe, la instanciamos y le pasamos los datos a traves
                // del objeto de tipo caloriaX
                caloriasForm = new CaloriasForm(caloriaX);
                // Y luego la mostramos
                caloriasForm.setVisible(true);
            }
        }
    }//GEN-LAST:event_jbCalcularCaloriasActionPerformed

    private void jtfNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyReleased
        jbBuscar.setEnabled(true);
        habilitarBoton();
        habilitarCalcularCalorias();
    }//GEN-LAST:event_jtfNombreKeyReleased

    private void jtfDetalleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDetalleKeyReleased
        habilitarBoton();
        habilitarCalcularCalorias();
    }//GEN-LAST:event_jtfDetalleKeyReleased

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        TraerDatos();
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Instancio el form de pacientes y lo hago visible mientras oculto el
        // form con el menu
        AlimentosForm alimForm = new AlimentosForm();
        alimForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComidasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComidasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComidasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComidasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComidasForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCalcularCalorias;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JCheckBox jcbEstado;
    private javax.swing.JLabel jlCalorias;
    private javax.swing.JLabel jlCaloriasTXT;
    private javax.swing.JLabel jlDetalle;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlMensajeSB;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JPanel jpConexion;
    private javax.swing.JTextField jtfDetalle;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables

    public void MensajeSB(int color, String mensaje) {

        // Los valores pueden variar de 0 a 255
        if (color == 1) {
            // Si el color es igual a 1 entonces es = a verde
            // En este caso Red = 0, Green = 153, Blue = 102.
            jlMensajeSB.setForeground(new Color(255, 255, 255));
        } else if (color == 2) {
            // Si el color es igual a 2 entonces es = a rojo
            // Los valores pueden variar de 0 a 255. En este caso Red = 153, Green = 51, Blue = 0.
            jlMensajeSB.setForeground(new Color(255, 50, 0));
        } else if (color == 3) {
            // Usado al iniciar el Form para que no se vea el texto dummy 31, 75, 128
            jlMensajeSB.setForeground(new Color(31, 75, 128));
        }
        // Aquí cargo el texto del mensaje en el Label
        // Si el texto del mensaje esta vacio entonces no muestro texto en
        // el Label pero limpio el texto anterior que pueda haber quedado
        jlMensajeSB.setText(mensaje);
    }

    public boolean PruebaDeCaracteres(String texto) {
        // Busco si los caracteres ingresados son letras
        int b = 0;
        int i = 0;
        for (i = 0; i < texto.length(); i++) {
            if (!(texto.charAt(i) >= 'A' && texto.charAt(i) <= 'Z') && !(texto.charAt(i) >= 'a' && texto.charAt(i) <= 'z') && texto.charAt(i) != ' ') {
                b++;
            }
        }
        if (b > 0 || texto.isEmpty()) {
            MensajeSB(2, "El campo Nombre debe completarse con letras");
            return false;
        } else {
            return true;
        }

    }

    public void LimpiarCampos() {
//        jtfNombre.requestFocus();
//
//        jtfID.setText("");
//        jtfNombre.setText("");
//        jtfDetalle.setText("");
//        jlCaloriasTXT.setText("0");
////        jcbEstado.setSelected(false);
//        jcbEstado.setSelected(false);
//        jcbEstado.setEnabled(false);
//        jlEstado.setEnabled(false);
//        jcbEstado.setForeground(Color.GRAY);
//
//        jbGuardar.setEnabled(false);
//        jbEliminar.setEnabled(false);
//        jbBuscar.setEnabled(false);
//        jbNuevo.setEnabled(false);
//        e = true;
//        MensajeSB(1, "");
        ComidasForm comForm = new ComidasForm();
        comForm.setVisible(true);
        this.setVisible(false);
    }

    public void habilitarCalcularCalorias() {
        if ((jtfNombre.getText().isEmpty() || jtfDetalle.getText().isEmpty())) {
            jbCalcularCalorias.setEnabled(false);
        } else {
            jbCalcularCalorias.setEnabled(true);
        }
    }

    FocusListener fl1 = new FocusListener() {
        @Override
        public void focusGained(FocusEvent fe) {
            jtfDetalle.removeFocusListener(fl2);
        }

        @Override
        public void focusLost(FocusEvent fe) {
//            if (jtfNombre.getText().equalsIgnoreCase("")) {
//                jtfNombre.setBorder(text_border);
//                jtfNombre.requestFocus();
//                MensajeSB(2, "El campo Nombre debe llenarse");
//            } else if (PruebaDeCaracteres(jtfNombre.getText()) == false) {
//                jtfNombre.setBorder(text_border_rojo);
//                jtfNombre.requestFocus();
//                jtfNombre.selectAll();
//                MensajeSB(2, "El campo Nombre debe llenarse solo con letras");
//            } else {
//                jtfNombre.setBorder(text_border_disable);
////                    estadojbNuevo();
//                jtfDetalle.addFocusListener(fl2);
////                jtfCalorias.addFocusListener(fl3);
//                jtfNombre.removeFocusListener(this);
//
//            }
            if (verificarNombre() == true) {
                jtfNombre.setBorder(text_border_disable);
                jtfDetalle.addFocusListener(fl2);
                jtfNombre.removeFocusListener(this);
            }
//                jtfNombre.requestFocus();
//                jtfNombre.selectAll();
//                System.out.println("algo");
//            }
        }
    };

    FocusListener fl2 = new FocusListener() {
        @Override
        public void focusGained(FocusEvent fe) {
            jtfNombre.removeFocusListener(fl1);
//            jtfCalorias.removeFocusListener(fl3);
        }

        @Override
        public void focusLost(FocusEvent fe) {
//            if (jtfNombre.getText().equalsIgnoreCase("")) {
//                jtfNombre.setBorder(text_border);
//                jtfNombre.requestFocus();
//                MensajeSB(2, "El campo Nombre debe llenarse");
//            } else {

// HACER METODOS PARA LA SEGURIDAD.,, EN EL FOCUS LISTENER 2 FIJARSE SI EL IF 
//DEL EQUALS SE PUEDE METER DENTRO DEL VERIFICARNOMBRE O UTILIZAR ESE METODO
//EN EL Fl2
//            if (jtfDetalle.getText().equalsIgnoreCase("")) {
//                jtfDetalle.setBorder(text_border);
//                jtfDetalle.requestFocus();
//                MensajeSB(2, "El campo Detalle debe llenarse");
//                jcbEstado.setEnabled(false);
//                jtfNombre.setDisabledTextColor(Color.white);
////                    jtfCalorias.setDisabledTextColor(Color.white);
//            } else {
//                jtfDetalle.setBorder(text_border_disable);
////                        estadojbNuevo();
//                jtfNombre.addFocusListener(fl1);
////                    jtfCalorias.addFocusListener(fl3);
//                jtfDetalle.removeFocusListener(fl2);
//            }
////            }
            if (verificarDetalle() == true) {
                jtfDetalle.setBorder(text_border_disable);
                jtfNombre.addFocusListener(fl1);
                jtfDetalle.removeFocusListener(this);
            }
//                jtfDetalle.requestFocus();
//                jtfDetalle.selectAll();
//                System.out.println("algo detalle");
//            }
        }
    };

//    FocusListener fl3 = new FocusListener() {
//        @Override
//        public void focusGained(FocusEvent fe) {
//            jtfNombre.removeFocusListener(fl1);
//            jtfDetalle.removeFocusListener(fl2);
//        }
//
//        @Override
//        public void focusLost(FocusEvent fe) {
//            if (jtfCalorias.getText().equalsIgnoreCase("")) {
//                jtfCalorias.setBorder(text_border);
//                jtfCalorias.requestFocus();
//                MensajeSB(2, "El campo Calorias debe llenarse");
//            } else {
//                try {
//                    if (Integer.parseInt(jtfCalorias.getText()) < 0 || Integer.parseInt(jtfCalorias.getText()) > 20000) {
//                        jtfCalorias.setBorder(text_border_rojo);
//                        jtfCalorias.requestFocus();
//                        jtfCalorias.selectAll();
//                        MensajeSB(2, "El campo Calorias está fuera de rango(0-20000)");
//                    } else {
//                        jtfCalorias.setBorder(text_border_disable);
////                            estadojbNuevo();
//                        jtfNombre.addFocusListener(fl1);
//                        jtfDetalle.addFocusListener(fl2);
//                        jtfCalorias.removeFocusListener(fl3);
//                    }
//                } catch (NumberFormatException ex) {
//                    MensajeSB(2, "El campo Calorias debe llenarse con números");
//                    jtfCalorias.setBorder(text_border_rojo);
//                    jtfCalorias.requestFocus();
//                    jtfCalorias.selectAll();
//                }
//            }
//        }
//    };
    public void habilitarBoton() {
        if (e == true) {
            if (jtfNombre.getText().isEmpty() || jtfDetalle.getText().isEmpty()) {
                jbNuevo.setEnabled(false);
//                jbCalcularCalorias.setEnabled(false);
            } else {
                jbNuevo.setEnabled(true);
//                jbCalcularCalorias.setEnabled(true);
            }
        }
    }

    public boolean verificarNombre() {
        if (jtfNombre.getText().equalsIgnoreCase("")) {
            jtfNombre.setBorder(text_border);
            jtfNombre.requestFocus();
            MensajeSB(2, "El campo Nombre debe llenarse");
        } else if (PruebaDeCaracteres(jtfNombre.getText()) == false) {
            jtfNombre.setBorder(text_border_rojo);
            jtfNombre.requestFocus();
            jtfNombre.selectAll();
            MensajeSB(2, "El campo Nombre debe llenarse solo con letras");
        } else {
            return true;
        }
        return false;
    }

    public boolean verificarDetalle() {
        if (jtfDetalle.getText().equalsIgnoreCase("")) {
            jtfDetalle.setBorder(text_border);
            jtfDetalle.requestFocus();
            MensajeSB(2, "El campo Detalle debe llenarse");
        } else {
            return true;
        }
        return false;
    }

    // CUANDO PONES TILDE EN EL NOMBRE YA NO TE LO TOMA COMO UNA LETRA!! VER ESO
}
